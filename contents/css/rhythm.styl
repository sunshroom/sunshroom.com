// Base font size (px)
base-font-size = 18px unless base-font-size is defined

// Base line height (px)
base-line-height = 28px unless base-line-height is defined

// Fudge factor used while calculating how many lines are required for an element (px)
base-line-padding = 4px unless base-line-padding is defined

// Set this to 1 for whole line padding and 0.5 for half line padding
base-line-padding-lines = 1 unless base-line-padding-lines is defined

// Typographic scale used to calculate all sorts of stuff; keep the 1 in the 5th position and edit everything else to suit
base-scale = 2.2500 1.7500 1.3750 1.1250 1 0.8750 0.8125 0.7500 0.6875 0.6250

// Dev mode true or false
dev = false unless dev is defined

// Slide this into the html declaration and you're good to go
baseline()
  font-size base-font-size
  line-height unit(base-line-height / base-font-size, em)

// Guidelines for vertical rhythm debugging
guide()
  unless dev is false
    background -moz-linear-gradient(top, #BA9B9A 1px, transparent 1px)
    background-image -webkit-linear-gradient(#BA9B9A 1px, transparent 1px)
    background-size 100% base-line-height

// Set font-size and line-height according to a vertical rhythm; usage: "scale x" where x is a number from 1 to 10
// Nested scaling is accomplished by specifying the parent scale; usage "scale x y" where y is the parent scale
scale(n, parent-scale = false)
  font-size = font-scale(n)
  if parent-scale
    local-font-size = font-scale(parent-scale)
  else
    local-font-size = base-font-size
  font-size unit((font-size / local-font-size), em)
  line-height unit((lines(font-size) * base-line-height / font-size), em)

// Return scaled font size in px
font-scale(scale = 5)
  return base-font-size * base-scale[scale - 1]

// Sort out the number of lines necessary to contain text of a particular size
lines(font-size, line-height = base-line-height)
  lines = ceil(font-size / line-height)
  if lines * line-height - font-size < base-line-padding
    lines = lines + base-line-padding-lines
  return lines

// Return some multiple of the base line height in em or px, mainly for use in setting margins and offsetting borders
// Nested scaling is accomplished by specifying the scale of the current element; usage: "space(x,y,z)" e.g. "space(2,,7)"
space(n = 1, offset = false, scale = 5)
  lh = unit(base-line-height / font-scale(scale), em)
  if offset
    if unit(offset) == "px"
      return unit((n * lh) - unit((offset / font-scale(scale)), em), em)
    else
      p(offset)
      return unit((n * lh) - offset, em)
  else
    return unit(n * lh, em)
